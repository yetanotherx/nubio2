<?php

/**
 * NubioHelper
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    nubio
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class NubioHelper extends BaseNubioHelper
{

	public function getContributionListQueryFromID( $id ) {
    	return Doctrine_Core::getTable('NubioRevision')
			->createBaseQuery()
			->where( 'h.id = ?', $id );
    }
    
    public function createSave(Doctrine_Connection $conn = null, sfForm $form = null) {
		$params = $form->getTaintedValues();
		
		$user = new sfGuardUser();
		
		$user->setEmailAddress($params['email_address']);
	    $user->setUsername($params['username']);
	    $user->setPassword($params['password']);
	    $user->setIsActive(false);
	    $user->setIsSuperAdmin(false);
	    
	    if( $params['first_name'] != '' ) $user->setFirstName($params['first_name']);
	    if( $params['last_name'] != '' ) $user->setLastName($params['last_name']);
	    
	    $user->save();
	    
	    $this->doctrine_uid = $user->getId();
	    $this->token = md5( serialize( $params ) . $this->doctrine_uid . serialize( $user->toArray() ) );
	    $this->token = 'n' . substr( $this->token, 0, 31 );
	    
		$ret = parent::save($conn);
		
		$message = Nubio::getVerificationEmail($params, $this);
 
    	sfContext::getInstance()->getMailer()->send($message);

		return $ret;

	}
	
	public function editSave(Doctrine_Connection $conn = null, sfForm $form = null) {
		$params = $form->getTaintedValues();
		$oldparams = $form->GetOption('currentVals');
		
		$user = Doctrine_Core::getTable('sfGuardUser')->
			createQuery('g')->
			where('g.id = ?', $this->getDoctrineUid())->
			fetchOne();
		
		if (!$user) {
			throw new Exception('Could not find user ID ' . $this->getId() );
		}
		
		$user->setUsername($params['username']);
	    $user->setFirstName($params['first_name']);
	    $user->setLastName($params['last_name']);
	    
	    $user->save();
	    
	    $this->wikiname = $params['wikiname'];
	    
		$ret = parent::save($conn);
		
		return $ret;

	}
}
